import { Person, PersonI, UpdatedPersonI } from "../../archive/person";
import { createNode, deleteNode, getNode, updateNode } from "../utils/crud";

export async function getPerson(id: string): Promise<Person | undefined> {
    const matchedNode: object | undefined = await getNode('Person', 'id: $id', { id });
    
    if(matchedNode){
        return matchedNode as Person;
    }

    return undefined;
}

//person id will be overridden by id generated by DB 
export async function createPerson(person: Person): Promise<Person> {
    const createdPerson: object | undefined = await createNode('Person', prepPersonProps(person), person);
    
    return new Person(createdPerson as PersonI);
}

export async function deletePerson(id: string): Promise<Person | undefined> {
    const deletedPerson: object | undefined = await deleteNode('Person', 'id: $id', { id });

    return deletedPerson as Person;
}

export async function updatePerson(updatedPerson: UpdatedPersonI): Promise<Person | undefined> {
    const matchedPerson = await updateNode('Person', 'p', 'id', updatedPersonToProps(updatedPerson), updatedPerson);

    return matchedPerson as Person;
}

function prepPersonProps(person: Person): string[] {
    const props: string[] = [`id:apoc.create.uuid()`];

    if(person.firstName) props.push('firstName: $firstName');
    if(person.secondName) props.push('secondName: $secondName');
    if(person.lastName) props.push('lastName: $lastName');
    if(person.birthDate) props.push('birthDate: $birthDate');
    if(person.deathDate) props.push('deathDate: $deathDate');

    return props;
}

function updatedPersonToProps(updatedPerson: UpdatedPersonI): string[] {
    const props: string[] = [];

    if(updatedPerson.updatedFirstName) props.push(`p.firstName = $updatedFirstName`);
    if(updatedPerson.updatedSecondName) props.push(`p.secondName = $updatedSecondName`);
    if(updatedPerson.updatedLastName) props.push(`p.lastName = $updatedLastName`);
    if(updatedPerson.updatedBirthDate) props.push(`p.birthDate = $updatedBirthDate`);
    if(updatedPerson.updatedDeathDate) props.push(`p.deathDate = $updatedDeathDate`);
 
    return props;
}